<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- App required start -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <!-- App required end -->

    <!-- IM SDK required start -->
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />

    <uses-permission android:name="android.permission.CALL_PHONE"/>
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!--Need to add after Android 12, apply for alarm clock timing permission -->
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
    <!-- IM SDK required end -->
    <!-- 从扩展存储读取权限 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="32"
        tools:ignore="ScopedStorage" />
    <!-- Android 13 用于替换 READ_EXTERNAL_STORAGE 权限 -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES"/>
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO"/>
    <!-- Android 14 用于申请部分权限 -->
    <uses-permission android:name="android.permission.READ_MEDIA_VISUAL_USER_SELECTED"/>
    <!-- android 13 通知运行时权限 -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
    <!-- 魅族推送配置 start-->
    <!-- 兼容 flyme5.0 以下版本，魅族内部集成 pushSDK 必填，不然无法收到消息-->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />
    <permission
        android:name="${applicationId}.push.permission.MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.push.permission.MESSAGE" />
    <!-- 兼容 flyme3.0 配置权限-->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />
    <permission
        android:name="${applicationId}.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />
    <!-- 魅族推送配置 end-->

    <!-- Oppo推送配置（如果应用无透传权限，则不用配置） start -->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE"/>
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE"/>
    <!-- Oppo推送配置 end -->

    <!-- Mi推送配置 start -->
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
    <!-- Mi推送配置 end -->

    <!-- RTC start -->
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <!-- 对于 Android 12.0 及以上且集成 v4.1.0 以下 SDK 的设备，还需要添加以下权限 -->
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT"/>
    <!-- 对于 Android 12.0 及以上设备，还需要添加以下权限 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN"/>
    <!-- RTC end -->

    <!-- Remove unused permission in remote library start -->
    <uses-permission
        android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE"
        tools:node="remove"/>
    <uses-permission
        android:name="com.google.android.gms.permission.AD_ID"
        tools:node="remove"/>
    <!-- Remove unused permission in remote library end -->

    <!-- honor push required -->
    <!-- 如果您的应用targerSdkVersion大于等于30，需要在 AndroidManifest.xml 中添加标签，用于查找到对应的action。 -->
    <queries>
        <intent>
            <action android:name="com.hihonor.push.action.BIND_PUSH_SERVICE" />
        </intent>
    </queries>

    <application
        android:usesCleartextTraffic="true"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/logo"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/logo"
        android:supportsRtl="true"
        android:theme="@style/Theme.ChatUIKit"
        android:name="com.hyphenate.chatdemo.DemoApplication"
        android:requestLegacyExternalStorage="true"
        tools:targetApi="31">
        <!--Add FileProvider-->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>
        <!-- FCM required start -->
        <service android:name=".common.push.fcm.EMFCMMSGService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- 取消自动初始化 -->
        <meta-data
            android:name="firebase_messaging_auto_init_enabled"
            android:value="false" />
        <meta-data
            android:name="firebase_analytics_collection_enabled"
            android:value="false" />
        <!-- FCM required end -->

        <!--华为 HMS Config-->
        <service android:name=".common.push.service.HMSPushService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- huawei push end -->

        <!-- VIVO推送配置 start -->
        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="${VIVO_PUSH_APPKEY}" />

        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="${VIVO_PUSH_APPID}" />

        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:permission="com.push.permission.UPSTAGESERVICE"
            android:exported="true"/>

        <receiver android:name="com.hyphenate.push.platform.vivo.EMVivoMsgReceiver"
            android:exported="false">
            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>
        <!-- VIVO推送配置 end -->

        <!-- MEIZU推送配置 start -->
        <receiver android:name="com.hyphenate.push.platform.meizu.EMMzMsgReceiver"
            android:exported="false">
            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE"
                    />
                <!-- 接收 register 消息 -->
                <action
                    android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收 unregister 消息-->
                <action
                    android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK"/>
                <!-- 兼容低版本 Flyme3 推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION"
                    />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />
                <category android:name="${applicationId}"></category>
            </intent-filter>
        </receiver>
        <!-- MEIZU推送配置 end -->

        <!-- Oppo推送配置 start -->
        <service
            android:name="com.heytap.msp.push.service.CompatibleDataMessageCallbackService"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE"
            android:exported="false">
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE"/>
            </intent-filter>
        </service> <!--兼容Q以下版本-->

        <service
            android:name="com.heytap.msp.push.service.DataMessageCallbackService"
            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE"
            android:exported="false">
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE"/>
                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE"/>
            </intent-filter>
        </service> <!--兼容Q版本-->
        <!-- Oppo推送配置 end -->

        <!-- Mi推送配置 start -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" /> <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />

        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" /> <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">

            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">

            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>

        </receiver>

        <receiver android:name=".common.push.receiver.MiMsgReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!-- Mi推送配置 end-->

        <!-- Hihonor推送配置 start -->
        <meta-data
            android:name="com.hihonor.push.app_id"
            android:value="${HONOR_PUSH_APPID}" />

        <service
            android:name=".common.push.service.HONORPushService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.hihonor.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- Hihonor推送配置 end -->

        <!-- Bugly 配置APP ID -->
        <meta-data
            android:name="BUGLY_APPID"
            android:value="${BUGLY_APPID}" />
        <!-- 配置Bugly调试模式（true或者false）-->
        <meta-data
            android:name="BUGLY_ENABLE_DEBUG"
            android:value="${BUGLY_ENABLE_DEBUG}" />

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:screenOrientation="portrait"
            android:configChanges="orientation|keyboardHidden|screenSize">

        </activity>
        <activity android:name=".ui.login.LoginActivity" />
        <activity android:name=".ui.login.SplashActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ui.chat.ChatActivity"
            android:screenOrientation="portrait"
            android:exported="false"/>
        <activity android:name=".ui.contact.ChatContactDetailActivity"
            android:exported="false"/>
        <activity android:name=".ui.group.ChatGroupDetailActivity"
            android:exported="false"/>
        <activity android:name=".callkit.ConferenceInviteActivity"
            android:exported="false"/>
        <activity android:name=".callkit.VideoCallActivity"
            android:label="@string/demo_activity_label_video_call"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:excludeFromRecents="false"
            android:launchMode="singleInstance"
            android:exported="false"/>
        <activity android:name="com.hyphenate.chatdemo.callkit.MultipleVideoActivity"
            android:label="@string/demo_activity_label_multi_call"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:excludeFromRecents="false"
            android:launchMode="singleInstance"
            android:exported="false"/>
        <activity android:name=".ui.me.UserInformationActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.EditUserNicknameActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.CurrencyActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.LanguageSettingActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.FeaturesActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.AboutActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.NotifyActivity"
            android:exported="false"/>
        <activity android:name=".ui.me.WebViewActivity"
            android:exported="false"/>
        <activity android:name=".ui.contact.ChatContactRemarkActivity"
            android:exported="false"/>
        <activity android:name=".ui.group.ChatCreateGroupActivity"
            android:exported="false"/>
        <activity android:name=".ui.contact.ChatContactCheckActivity"
            android:exported="false"/>
        <!-- crop activity -->
        <activity
            android:name="com.yalantis.ucrop.UCropActivity"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar"/>
    </application>

</manifest>